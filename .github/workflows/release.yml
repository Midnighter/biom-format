name: Release

on: [push, pull_request]

jobs:
  build_sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build distribution
        run: |
          export RELEASE_VERSION=${{ github.ref_name }}
          pip install numpy cython
          pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          name: dist-artifacts
          path: dist/*.tar.gz

  # adapted from 
  # https://github.com/biopython/biopython/blob/master/.github/workflows/ci.yml
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        pyver: ["37", "38", "39", "310", "311"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Python packaging tools
        run: |
          export RELEASE_VERSION=${{ github.ref_name }}
          pip install numpy cython
          python -m pip install --upgrade pip setuptools wheel

      # https://github.com/pypa/cibuildwheel/blob/main/examples/github-deploy.yml
      - name: Build wheels cp${{ matrix.pyver}} Linux
        if: matrix.os == 'ubuntu-latest' 
        env:
          CIBW_ARCHS_MACOS: x86_64
          CIBW_SKIP: "pp*" "*-musllinux*"
          CIBW_BUILD: cp${{ matrix.pyver }}-*

        uses: pypa/cibuildwheel@v2.12.3
      
      - name: Build wheels cp${{ matrix.pyver}} MacOS 
        if: matrix.os == 'macos-latest'
        env:
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_SKIP: "pp*"
          CIBW_BUILD: cp${{ matrix.pyver }}-*

        uses: pypa/cibuildwheel@v2.12.3
      
      
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: dist-artifacts
          path: ./wheelhouse/*.whl

  release:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - name: Stage artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-artifacts
          path: dist/
      
      - name: Check artifacts
        run: ls -lrt dist/

      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
